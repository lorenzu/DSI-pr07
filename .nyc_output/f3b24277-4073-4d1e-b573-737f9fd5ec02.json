{"/home/usuario/DSI-pr07/src/ejercicio-1-mod.ts":{"path":"/home/usuario/DSI-pr07/src/ejercicio-1-mod.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":13,"column":8},"end":{"line":13,"column":24}},"3":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"4":{"start":{"line":17,"column":12},"end":{"line":17,"column":47}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":37}},"6":{"start":{"line":27,"column":8},"end":{"line":27,"column":30}},"7":{"start":{"line":35,"column":22},"end":{"line":35,"column":24}},"8":{"start":{"line":36,"column":8},"end":{"line":43,"column":11}},"9":{"start":{"line":37,"column":12},"end":{"line":42,"column":13}},"10":{"start":{"line":38,"column":16},"end":{"line":38,"column":35}},"11":{"start":{"line":41,"column":16},"end":{"line":41,"column":33}},"12":{"start":{"line":44,"column":8},"end":{"line":44,"column":23}},"13":{"start":{"line":53,"column":8},"end":{"line":60,"column":11}},"14":{"start":{"line":54,"column":12},"end":{"line":59,"column":13}},"15":{"start":{"line":55,"column":16},"end":{"line":55,"column":32}},"16":{"start":{"line":58,"column":16},"end":{"line":58,"column":33}},"17":{"start":{"line":61,"column":8},"end":{"line":61,"column":20}},"18":{"start":{"line":68,"column":8},"end":{"line":68,"column":33}},"19":{"start":{"line":71,"column":0},"end":{"line":71,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":18},"end":{"line":14,"column":5}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":31},"end":{"line":20,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":18},"end":{"line":28,"column":5}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":21},"end":{"line":45,"column":5}},"line":34},"4":{"name":"(anonymous_4)","decl":{"start":{"line":36,"column":27},"end":{"line":36,"column":28}},"loc":{"start":{"line":36,"column":38},"end":{"line":43,"column":9}},"line":36},"5":{"name":"(anonymous_5)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":25},"end":{"line":62,"column":5}},"line":51},"6":{"name":"(anonymous_6)","decl":{"start":{"line":53,"column":27},"end":{"line":53,"column":28}},"loc":{"start":{"line":53,"column":38},"end":{"line":60,"column":9}},"line":53},"7":{"name":"(anonymous_7)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":15},"end":{"line":69,"column":5}},"line":67}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},{"start":{"line":16,"column":8},"end":{"line":18,"column":9}}],"line":16},"1":{"loc":{"start":{"line":37,"column":12},"end":{"line":42,"column":13}},"type":"if","locations":[{"start":{"line":37,"column":12},"end":{"line":42,"column":13}},{"start":{"line":37,"column":12},"end":{"line":42,"column":13}}],"line":37},"2":{"loc":{"start":{"line":54,"column":12},"end":{"line":59,"column":13}},"type":"if","locations":[{"start":{"line":54,"column":12},"end":{"line":59,"column":13}},{"start":{"line":54,"column":12},"end":{"line":59,"column":13}}],"line":54}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":1,"13":1,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"b":{"0":[1,0],"1":[1,0],"2":[1,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/DSI-pr07/src/ejercicio-1-mod.ts","sources":["/home/usuario/DSI-pr07/src/ejercicio-1-mod.ts"],"names":[],"mappings":";;;AAMA;;;;EAIE;AACF,MAAa,MAAM;IACP,KAAK,CAAQ;IACb,MAAM,CAAC,cAAc,CAAS;IAEtC;QACI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACpB,CAAC;IAEM,MAAM,CAAC,iBAAiB;QAC3B,IAAG,CAAC,MAAM,CAAC,cAAc,EAAC,CAAC;YACvB,MAAM,CAAC,cAAc,GAAG,IAAI,MAAM,CAAC;QACvC,CAAC;QACD,OAAO,MAAM,CAAC,cAAc,CAAC;IACjC,CAAC;IACD;;;;OAIG;IACH,OAAO,CAAC,IAAS;QACb,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAED;;;;OAIG;IACH,UAAU,CAAC,IAAY;QACnB,IAAI,OAAO,GAAa,EAAE,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACzB,IAAG,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,EAAC,CAAC;gBAClB,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACvB,CAAC;iBAAM,CAAC;gBACJ,OAAO,SAAS,CAAC;YACrB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACH,cAAc,CAAC,IAAY;QACvB,IAAI,IAAU,CAAC;QACf,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;YACzB,IAAG,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,EAAC,CAAC;gBAClB,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,CAAC;iBAAM,CAAC;gBACJ,OAAO,SAAS,CAAC;YACrB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IAClB,CAAC;IACD;;;OAGG;IACH,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC7B,CAAC;CACJ;AA/DD,wBA+DC","sourcesContent":["/** \n * \n * Tupla para representar el usuario, acciones, y fecha\n * */ \nexport type Log = [string, string[], Date]\n\n/** \n * \n * Clase Logger, contiene usuarios de tipo Log\n * \n*/\nexport class Logger{\n    private users: Log[];\n    private static loggerInstance: Logger;\n\n    private constructor(){\n        this.users = [];\n    }\n\n    public static getloggerInstance(){\n        if(!Logger.loggerInstance){\n            Logger.loggerInstance = new Logger;\n        }\n        return Logger.loggerInstance;\n    }\n    /**\n     * \n     * @param user usuario a añadir\n     * añade un usuario a users\n     */\n    addUser(user: Log){\n        this.users.push(user);\n    }\n\n    /**\n     * \n     * @param user contiene el nombre de usuario a buscar\n     * @returns retorna las acciones llevadas a cabo por ese usuario\n     */\n    getActions(user: string): string[]{\n        let accions: string[] = [];\n        this.users.forEach((user_) => {\n            if(user_[0] === user){\n                accions = user_[1];\n            } else {\n                return undefined;\n            }\n          });\n          return accions;\n    }\n\n    /**\n     * \n     * @param user contiene el nombre de usuario\n     * @returns obtiene la fecha del  usuario\n     */\n    getTimeActions(user: string): Date{\n        let time: Date;\n        this.users.forEach((user_) => {\n            if(user_[0] === user){\n                time = user_[2];\n            } else {\n                return undefined;\n            }\n          });\n          return time;\n    }\n    /**\n     * \n     * @returns contiene el número de usuarios registrados\n     */\n    getUsers(){\n        return this.users.length;\n    }\n}\n\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"844e9cc52481ed65a6bbf2eb8fe1a24b2b77b66a","contentHash":"bc86916079116207beac64e73232729b6d3798a098e3e2328c4a453238553f83"}}